#ifndef __DRV_SPI_FLASH_H
#define __DRV_SPI_FLASH_H

#include "system_platform_config.h"

#define SPI_FLASH_BASE_ADDR   0x000000
#define SPI_FLASH_PAGE_SIZE   256ul
#define SPI_FLASH_SECTOR_SIZE 4096ul
#define SPI_FLASH_BLOCK_SIZE  65536ul

#define W25X_BUSY_MASK        0x01

#define W25X_PAGE_WR          0x02
#define W25X_RD_DATA          0x03
#define W25X_RD_STATUS        0x05
#define W25X_WR_ENABLE        0x06
#define W25X_SECTOR_ERASE     0x20
#define W25X_CHIP_ERASE       0xc7

#define W25X_ADDR_RTC_INIT_FLAG     SPI_FLASH_BASE_ADDR
#define W25X_ADDR_PWM_DATA_START    (SPI_FLASH_BASE_ADDR + 1)
#define W25X_ADDR_PWM_DATA_END      (SPI_FLASH_BASE_ADDR + SYS_PWM_CH_NUM * 2)

#define spi_falsh_cs(a)   if(a)\
                            LL_GPIO_SetOutputPin(W25X_CS_PORT, DRV_W25_CS_PIN);\
                          else\
                            LL_GPIO_ResetOutputPin(W25X_CS_PORT, DRV_W25_CS_PIN)

extern void drv_spi_flash_init(void);

extern void drv_spi_flash_sector_erase(uint32_t sector_addr);
extern void drv_spi_flash_chip_erase(void);

extern void drv_spi_flash_read(uint8_t* buffer, uint32_t addr, uint16_t num);
extern void drv_spi_flash_page_write(uint8_t* buffer, uint32_t addr, uint16_t num);
extern void drv_spi_flash_write_check(uint8_t* buffer, uint32_t addr, uint16_t num);

extern uint32_t drv_spi_flash_get_jedec_id(void);

#endif